 ✘ tasdik@Acer  ~/Desktop/ns/pgp  gpg --gen-key
gpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Please select what kind of key you want:
   (1) RSA and RSA (default)
   (2) DSA and Elgamal
   (3) DSA (sign only)
   (4) RSA (sign only)
Your selection? 1
RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 1024
Requested keysize is 1024 bits
Please specify how long the key should be valid.
         0 = key does not expire
      <n>  = key expires in n days
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
Key is valid for? (0) 0
Key does not expire at all
Is this correct? (y/N) y

You need a user ID to identify your key; the software constructs the user ID
from the Real Name, Comment and Email Address in this form:
    "Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>"

Real name: Tasdik Rahman
Email address: tasdik95@gmail.com
Comment: tasdik
You selected this USER-ID:
    "Tasdik Rahman (tasdik) <tasdik95@gmail.com>"

Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O
You need a Passphrase to protect your secret key.

We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.

Not enough random bytes available.  Please do some other work to give
the OS a chance to collect more entropy! (Need 260 more bytes)
.+++++
+++++
We need to generate a lot of random bytes. It is a good idea to perform
some other action (type on the keyboard, move the mouse, utilize the
disks) during the prime generation; this gives the random number
generator a better chance to gain enough entropy.
+++++
+++++
gpg: key B8445B60 marked as ultimately trusted
public and secret key created and signed.

gpg: checking the trustdb
gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
pub   1024R/B8445B60 2016-11-02
      Key fingerprint = D288 019C 5839 6A6C 9909  5A7E 4A2E 5BC1 B844 5B60
uid                  Tasdik Rahman (tasdik) <tasdik95@gmail.com>
sub   1024R/5633FFBB 2016-11-02

 tasdik@Acer  ~/Desktop/ns/pgp  ls
 tasdik@Acer  ~/Desktop/ns/pgp  ls -a
.  ..
 tasdik@Acer  ~/Desktop/ns/pgp  gpg -o tasdik.gpg --export Tasdik Rahman
 tasdik@Acer  ~/Desktop/ns/pgp  ls
tasdik.gpg
 tasdik@Acer  ~/Desktop/ns/pgp  gpg --import tasdik.gpg
gpg: key B8445B60: "Tasdik Rahman (tasdik) <tasdik95@gmail.com>" not changed
gpg: Total number processed: 1
gpg:              unchanged: 1
 tasdik@Acer  ~/Desktop/ns/pgp  vi msg.txt
 tasdik@Acer  ~/Desktop/ns/pgp  gpg -o sign-sig --sign msg.txt

You need a passphrase to unlock the secret key for
user: "Tasdik Rahman (tasdik) <tasdik95@gmail.com>"
1024-bit RSA key, ID B8445B60, created 2016-11-02

 ✘ tasdik@Acer  ~/Desktop/ns/pgp  gpg -o garble.gpg -r Tasdik --encrypt msg.txt
tasdik@Acer  ~/Desktop/ns/pgp  gpg -o new.txt --decrypt garble.gpg 

You need a passphrase to unlock the secret key for
user: "Tasdik Rahman (tasdik) <tasdik95@gmail.com>"
1024-bit RSA key, ID 5633FFBB, created 2016-11-02 (main key ID B8445B60)

gpg: encrypted with 1024-bit RSA key, ID 5633FFBB, created 2016-11-02
      "Tasdik Rahman (tasdik) <tasdik95@gmail.com>"
 tasdik@Acer  ~/Desktop/ns/pgp  cat new.txt 
simple text 
 tasdik@Acer  ~/Desktop/ns/pgp  

